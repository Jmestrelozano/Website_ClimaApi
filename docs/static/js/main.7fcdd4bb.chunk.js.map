{"version":3,"sources":["api/peticiones.js","utils/ConversorTemperatura.js","utils/GenerarNombre_Dia.js","components/CardWidget.js","components/Carrousel.js","components/WidgetCarousel.js","components/WidgetFavorite.js","components/WidgetHeader.js","components/WidgetSities.js","components/WidgetSugest.js","views/WeatherSiteScreen.js","index.js"],"names":["Peticiones","url","a","method","body","fetch","JSON","stringify","respuesta","json","obtener","ConversorTempKaC","kelvin","toFixed","GenerarNombre_Dia","dia","Date","getDay","CardWidget","posts","undefined","console","log","map","data","index","className","date","main","temp","humidity","wind","speed","Carrousel","pages","setCurrentPage","numberOfPages","i","push","useState","currentButton","setCurrentButton","useEffect","onClick","e","preventDefault","prev","length","WidgetCarousel","setPosts","currentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","Math","ceil","then","result","list","id","WidgetFavorite","ResultData","setResultData","arrayPronostico","places","src","image","alt","name","description","weather","icon","WidgetHeader","DataResult","setDataResult","Temp","setTemp","WidgetSities","arraySites","WidgetSugest","style","marginTop","WeatherSiteScreen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fcdd4bb.chunk.js","sourcesContent":["\r\nexport const Peticiones = async (url, method = \"GET\", body) => {\r\n    let respuesta = await fetch(`${url}`, {\r\n      method,\r\n      body: JSON.stringify(body),\r\n    });\r\n  \r\n    let obtener = await respuesta.json();\r\n    return obtener;\r\n  };\r\n\r\n","export const ConversorTempKaC = (kelvin) => {\r\n  // Fórmula\r\n  // (32 °F − 32) × 5/9 = 0 °C\r\n\r\n  let resultado = kelvin - 273.15 \r\n\r\n  return resultado.toFixed(0);\r\n};\r\n","export const GenerarNombre_Dia = (dia) => {\r\n  let dias = [\r\n    \"Domingo\",\r\n    \"Lunes\",\r\n    \"Martes\",\r\n    \"Miercoles\",\r\n    \"Jueves\",\r\n    \"Viernes\",\r\n    \"Sabado\",\r\n  ];\r\n\r\n  const numeroDia = new Date(dia).getDay();\r\n  const nombreDia = dias[numeroDia];\r\n\r\n  return nombreDia;\r\n};\r\n","import React from \"react\";\r\nimport { ConversorTempKaC } from \"../utils/ConversorTemperatura\";\r\nimport { GenerarNombre_Dia } from \"../utils/GenerarNombre_Dia\";\r\n\r\nexport const CardWidget = ({ posts }) => {\r\n  return (\r\n    <>\r\n      {posts === undefined\r\n        ? console.log(\"cargando\")\r\n        : posts.map((data, index) => {\r\n            \r\n            return (\r\n              <div key={index} className=\"widget-carousel-item\">\r\n                <div className=\"widget-day\">\r\n            <h3>{GenerarNombre_Dia(data.date)}</h3>\r\n                </div>\r\n                <div>\r\n                  <div className=\"widget-carousel-temp\">\r\n                    <p>{ConversorTempKaC(data.main.temp)} °C</p>\r\n                  </div>\r\n                  <div className=\"widget-carousel-footer\">\r\n                    <div>\r\n                      <i className=\"fas fa-circle icon-humidity\"></i>\r\n                      <span>{`${data.main.humidity}%`}</span>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <i className=\"fas fa-circle icon-speed\"></i>\r\n                      <span>{`${data.wind.speed}m/s`}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport const Carrousel = ({ pages = 3, setCurrentPage }) => {\r\n  //Set number of pages\r\n  const numberOfPages = [];\r\n  for (let i = 1; i <= pages; i++) {\r\n    numberOfPages.push(i);\r\n  }\r\n\r\n  // Current active button number\r\n  const [currentButton, setCurrentButton] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(currentButton);\r\n  }, [currentButton]);\r\n\r\n  return (\r\n\r\n    <div className=\"button-slide\">\r\n    <button  className={`${currentButton === 1 ? \"disabled\" : \"\"}`}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          setCurrentButton((prev) => (prev <= 1 ? prev : prev - 1));\r\n        }}>\r\n      <i className=\"wi wi-direction-left\"></i>\r\n    </button>\r\n    <button className={`${\r\n          currentButton === numberOfPages.length ? \"disabled\" : \"\"\r\n        }`}\r\n        onClick={() =>\r\n          setCurrentButton((prev) =>\r\n            prev >= numberOfPages.length ? prev : prev + 1\r\n          )\r\n        }>\r\n      <i className=\"wi wi-direction-right\"></i>\r\n    </button>\r\n  </div>\r\n  \r\n  \r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Peticiones } from \"../api/peticiones\";\r\nimport { CardWidget } from \"./CardWidget\";\r\nimport { Carrousel } from \"./Carrousel\";\r\n\r\nexport const WidgetCarousel = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(3);\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n  const pages = Math.ceil(posts.length / postsPerPage);\r\n\r\n  useEffect(() => {\r\n    Peticiones(\r\n      \"https://run.mocky.io/v3/73c29128-d158-40db-aeae-ea78a0d762b7\",\r\n      \"GET\"\r\n    ).then((result) => {\r\n      setPosts(result.list);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"widget-carousel\">\r\n        <div className=\"widget-carousel-header\">\r\n          <h3>Forecast Extended</h3>\r\n          <Carrousel pages={pages} setCurrentPage={setCurrentPage} />\r\n        </div>\r\n\r\n        <div className=\"content-carousel-item contened\">\r\n          <CardWidget posts={currentPosts} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Peticiones } from \"../api/peticiones\";\r\nimport { ConversorTempKaC } from \"../utils/ConversorTemperatura\";\r\n\r\nexport const WidgetFavorite = () => {\r\n  const [ResultData, setResultData] = useState([]);\r\n  let arrayPronostico = [];\r\n  Peticiones(\r\n    \"https://run.mocky.io/v3/818d0158-727b-461e-9f76-06734ed7e582\",\r\n    \"GET\"\r\n  ).then((result) => {\r\n    arrayPronostico.push(result.places[0], result.places[1]);\r\n    setResultData(arrayPronostico);\r\n  });\r\n\r\n  return (\r\n    <div id=\"widget-favorite\">\r\n      <h3>\r\n        OUR FAVORITE <span>PLACES</span>\r\n      </h3>{\" \"}\r\n      <div className=\"content-widget-card\">\r\n        {ResultData === undefined\r\n          ? console.log(\"cargando\")\r\n          : ResultData.map((data,index) => {\r\n\r\n              return (\r\n                <div  key={index}className=\"widget-card\">\r\n                  <div className=\"widget-card-img\">\r\n                    <img src={data.image} alt=\"image\"/>\r\n                  </div>\r\n                  <div className=\"widget-card-text\">\r\n                    <h5 className=\"widget-headquarter-name\">{data.name}</h5>\r\n                    <p>{data.description}</p>\r\n                    <div className=\"widget-card-text-footer\">\r\n                      <i className=\"fas fa-circle icon-temp\"></i>\r\n                      <span>{ConversorTempKaC(data.main.temp)}°C</span>\r\n                      <i className=\"fas fa-circle icon-humidity\"></i>\r\n                      <span>{`${data.main.humidity}%`}</span>\r\n                      <i className=\"fas fa-circle icon-speed\"></i>\r\n                      <span>{`${data.wind.speed}m/s`}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"widget-icon\">\r\n                    <i\r\n                      className={`wi wi-day-${data.weather[0].icon} icon-favorite`}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Peticiones } from \"../api/peticiones\";\r\nimport { ConversorTempKaC } from \"../utils/ConversorTemperatura\";\r\nexport const WidgetHeader = () => {\r\n  const [DataResult, setDataResult] = useState([]);\r\n  const [Temp, setTemp] = useState([]);\r\n\r\n  useEffect(() => {\r\n    \r\n  Peticiones(\r\n      \"https://run.mocky.io/v3/818d0158-727b-461e-9f76-06734ed7e582\",\r\n      \"GET\"\r\n    ).then((result) => {\r\n      setDataResult(result.places);\r\n      setTemp(ConversorTempKaC(result.places[2].main.temp));\r\n    });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      {DataResult[2] === undefined ? (\r\n        console.log(\"cargando\")\r\n      ) : (\r\n        <div id=\"widget-header\">\r\n          <div className=\"content-img\">\r\n            <img src={DataResult[2].image} alt={DataResult[2].name} />\r\n          </div>\r\n          <div className=\"content-text\">\r\n            <div className=\"widget-headquarter\">\r\n              <div className=\"etiqueta-sitio\">\r\n                <p className=\"content-icon\">\r\n                  {\" \"}\r\n                  <i className=\"fas fa-map-marker-alt\"></i> {DataResult[2].name}\r\n                </p>\r\n              </div>\r\n              <p className=\"content-temp\">{Temp}°C</p>\r\n              <p className=\"content-parrafo\">\r\n                Good Morning,\r\n                <br />\r\n                <span>Condor!</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"widget-icon\">\r\n              <i className={`wi wi-day-${DataResult[2].weather[0].icon} icono`}></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Peticiones } from \"../api/peticiones\";\r\n\r\n\r\nexport const WidgetSities = () => {\r\n  const [ResultData, setResultData] = useState([]);\r\n\r\n  let arraySites = [];\r\n  Peticiones(\r\n    \"https://run.mocky.io/v3/f8926877-849a-416f-8226-9fd9d9fc5e07\",\r\n    \"GET\"\r\n  ).then((result) => {\r\n    arraySites.push(result.result[0], result.result[7], result.result[8]);\r\n    setResultData(arraySites);\r\n  });\r\n\r\n  return (\r\n    <div id=\"widget-sities\">\r\n      <h3>\r\n        PLACE TO <span>VISIT</span>\r\n      </h3>\r\n      <div className=\"widget-sities-container\">\r\n        {ResultData === undefined\r\n          ? console.log(\"cargando\")\r\n          : ResultData.map((data,index) => {\r\n              return (\r\n                <div key={index} className=\"widget-car\">\r\n                  <div className=\"widget-sities-img\">\r\n                    <img src={data.image} />\r\n                  </div>\r\n                  <div className=\"widget-sities-text\">\r\n                    <div className=\"widget-city-name\">\r\n                      <h3>{data.name}</h3>\r\n                    </div>\r\n                    <div className=\"btn-sities\">\r\n                      <a>VISIT PLACE</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Peticiones } from \"../api/peticiones\";\r\nimport { ConversorTempKaC } from \"../utils/ConversorTemperatura\";\r\nimport { GenerarNombre_Dia } from \"../utils/GenerarNombre_Dia\";\r\n\r\nexport const WidgetSugest = () => {\r\n  const [ResultData, setResultData] = useState([]);\r\n  Peticiones(\r\n    \"https://run.mocky.io/v3/73c29128-d158-40db-aeae-ea78a0d762b7\",\r\n    \"GET\"\r\n  ).then((result) => {\r\n    setResultData([result.list[5]]);\r\n  });\r\n\r\n  return (\r\n    <div id=\"widget-suggest\">\r\n      <h3>\r\n      HEADQUATER<span> SUGGEST</span>\r\n      </h3>\r\n      <div className=\"content-widget-suggest\">\r\n        {ResultData[0] === undefined\r\n          ? console.log(\"cargando\")\r\n          : ResultData.map((data,index) => {\r\n              return (\r\n                <div key={index} className=\"widget-card-suggest\">\r\n                  <div className=\"widget-card-suggest-header\">\r\n                    <div className=\"widget-headquarter\">\r\n                      <h3>CARTAGENA - CO</h3>\r\n                    </div>\r\n                    <div className=\"widget-icon\">\r\n                      <i\r\n                        className={`wi wi-day-${data.weather[0].icon} icon-suggest`}\r\n                      ></i>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"widget-tiempo\">\r\n                    <p style={{ marginTop: \"0\" }} className=\"content-temp\">\r\n                      {ConversorTempKaC(data.main.temp)} °C\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"widget-card-suggest-footer\">\r\n                    <div className=\"detail-tiempo\">\r\n                      <i className=\"fas fa-circle icon-humidity\"></i>\r\n                      <span>{`${data.main.humidity}%`}</span>\r\n                      <i className=\"fas fa-circle icon-speed\"></i>\r\n                      <span>{`${data.wind.speed}m/s`}</span>\r\n                    </div>\r\n                    <div className=\"widget-day\">\r\n                      <p> {GenerarNombre_Dia(data.date)}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { WidgetCarousel } from \"../components/WidgetCarousel\";\r\nimport { WidgetFavorite } from \"../components/WidgetFavorite\";\r\nimport { WidgetHeader } from \"../components/WidgetHeader\";\r\nimport { WidgetSities } from \"../components/WidgetSities\";\r\nimport { WidgetSugest } from \"../components/WidgetSugest\";\r\n\r\nexport const WeatherSiteScreen = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <WidgetHeader />\r\n      <div className=\"container-body\">\r\n        <WidgetCarousel />\r\n        <WidgetFavorite />\r\n        <WidgetSugest />\r\n        <WidgetSities />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { WeatherSiteScreen } from './views/WeatherSiteScreen';\r\nimport \"./icons/weather-icons-master/weather-icons-master/css/weather-icons.css\"\r\n\r\n\r\nReactDOM.render(\r\n <WeatherSiteScreen /> ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}